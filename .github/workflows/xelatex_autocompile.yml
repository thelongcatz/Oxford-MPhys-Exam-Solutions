name: Build and Commit PDFs with XeLaTeX

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  check:
    name: Check for repo changes
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.texlist.conclusion }}
      tex_files: ${{ steps.texlist.outputs.tex_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 2
      - name: Filter for a list of titles to be compiled
        id: filter
        run: |
          diff="$(git diff --name-only --diff-filter=AM ${OLD_SHA} ${NEW_SHA})"
          if [ "$GITHUB_EVENT" = 'workflow_dispatch' ] || [ ! -z "$(echo ${diff} | grep '.*\.cls')" ]; then
            # If manually triggered or a class definition has changed, recompile every single document
            echo "list=/ALL/" >> "$GITHUB_OUTPUT"
          else
            # Else output the list of changed files, NULL in the off chance that nothing has changed
            tex_src_changes="$(echo ${diff} | grep -e '.*/.*\.tex' -e '.*/Images/.*' | cut -d '/' -f -2 | uniq)"
            if [ ! -z "$tex_src_changes" ]; then
              echo "list=${tex_src_changes}" >> "$GITHUB_OUTPUT"
            else
              echo "list=/NULL/" >> "$GITHUB_OUTPUT"
            fi
          fi
        env:
          GITHUB_EVENT: ${{ github.event_name }}
          OLD_SHA: ${{ github.event.before }}
          NEW_SHA: ${{ github.sha }}
      - name: Construct a list of TeX root files
        if: ${{ steps.filter.outputs.list != '/NULL/' }}
        id: texlist
        run: |
          if [ "$TEX_DIRS" == '/ALL/' ]; then
            dirs="$(find . -name '*' -mindepth 2 -maxdepth 2 -type d -not -path './.*')"
          else
            dirs="${TEX_DIRS}"
          fi

          declare -a output=()
          for dir in $dirs; do
            output+=("${dir}/$(basename ${dir}).tex")
          done

          echo "tex_files=${output[@]}" >> "$GITHUB_OUTPUT"
        env:
          TEX_DIRS: ${{ steps.filter.outputs.list }}
  compile:
    name: Compile and commit TeX files
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.status == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Compile PDFs with XeLaTeX
        uses: xu-cheng/latex-action@809f138f734cff030fab8eb42fd7a61a9bae94de
        with:
          root_file: ${{ needs.check.outputs.tex_files }}
          work_in_root_file_dir: true
          latexmk_shell_escape: true
          latexmk_use_xelatex: true
        env:
          TEXINPUTS: "${{ github.workspace }}//:"
      - name: Move and Commit PDFs
        run: |
          for tex in $TEX_FILES; do
            file="$(basename ${tex})"
            filename="${file%%.tex}"
            dir="$(dirname ${tex})"
            parent_dir="$(dirname ${dir})"
            mv "${dir}/${filename}.pdf" "${parent_dir}"
          done
          git config --global user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          find . -name '*.pdf' -print0 | xargs -0 git add
          git commit -m 'Auto-compilation by Github Actions'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}
          git push
        env:
          TEX_FILES: ${{ needs.check.outputs.tex_files }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
